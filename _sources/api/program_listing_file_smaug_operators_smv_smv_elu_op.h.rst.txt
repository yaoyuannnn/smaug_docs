
.. _program_listing_file_smaug_operators_smv_smv_elu_op.h:

Program Listing for File smv_elu_op.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file_smaug_operators_smv_smv_elu_op.h>` (``smaug/operators/smv/smv_elu_op.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef _OPERATORS_SMV_SMV_ELU_OP_H_
   #define _OPERATORS_SMV_SMV_ELU_OP_H_
   
   #include "smaug/core/backend.h"
   #include "smaug/operators/common.h"
   #include "smaug/operators/elu_op.h"
   #include "smaug/operators/smv/smv_unary_op_common.h"
   
   namespace smaug {
   
   class SmvEluOp : public EluOp<SmvBackend> {
      public:
       using EluOp<SmvBackend>::EluOp;
       void tile() override { tiledTensors = smv::unary::doTiling(this, false); }
       void run() override { smv::unary::run(this, tiledTensors); };
   
      protected:
       std::array<TiledTensor, 2> tiledTensors;
   };
   
   class SmvSeluOp : public SeluOp<SmvBackend> {
      public:
       using SeluOp<SmvBackend>::SeluOp;
       void tile() override { tiledTensors = smv::unary::doTiling(this, false); }
       void run() override { smv::unary::run(this, tiledTensors); };
   
      protected:
       std::array<TiledTensor, 2> tiledTensors;
   };
   
   }  // namespace smaug
   
   #endif
   
