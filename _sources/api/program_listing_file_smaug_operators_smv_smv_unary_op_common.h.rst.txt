
.. _program_listing_file_smaug_operators_smv_smv_unary_op_common.h:

Program Listing for File smv_unary_op_common.h
==============================================

|exhale_lsh| :ref:`Return to documentation for file <file_smaug_operators_smv_smv_unary_op_common.h>` (``smaug/operators/smv/smv_unary_op_common.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef _OPERATORS_SMV_SMV_UNARY_OP_H_
   #define _OPERATORS_SMV_SMV_UNARY_OP_H_
   
   #include "smaug/core/backend.h"
   #include "smaug/operators/common.h"
   #include "smaug/operators/unary_op.h"
   
   namespace smaug {
   namespace smv {
   namespace unary {
   
   std::pair<activation_type, activation_param_t> getActivationParams(
           UnaryOp<SmvBackend>* op);
   
   void runX(UnaryOp<SmvBackend>* op, TiledTensor& inputs, TiledTensor& outputs);
   
   TiledTensor generateTiles(Tensor* tensor,
                             const TensorShape& tileShape,
                             Operator* op,
                             bool copyData = true);
   
   std::array<TiledTensor, 2> doTiling(UnaryOp<SmvBackend>* op,
                                       bool copyData = true);
   
   void run(UnaryOp<SmvBackend>* op, std::array<TiledTensor, 2>& tiledTensors);
   
   }  // namespace unary
   }  // namespace smv
   }  // namespace smaug
   
   #endif
   
